@{
    ViewData["Title"] = "Создание новой темы";
    ViewData["HideSidebar"] = true;
}

<style>
    /* ---------------- Общие переменные ---------------- */
    :root {
        --background-color: #1a1a1b; /* Тёмная тема */
        --text-color: #d7dadc;
        --navbar-color: #272729;
        --button-color: #424245;
        --button-hover-color: #5a5a5b;
        --search-bar-bg: #272729;
        --search-bar-border: #424245;
        --placeholder-color: #848586;
        --card-bg: #2a2a2d; /* Темный фон карточек */
        --link-color: #bb86fc; /* Цвет ссылок на темной теме */
    }

    [data-theme="light"] {
        --background-color: #ffffff; /* Светлая тема */
        --text-color: #333333;
        --navbar-color: #f8f9fa;
        --button-color: #e7e7e7;
        --button-hover-color: #d6d6d6;
        --search-bar-bg: #f1f3f5;
        --search-bar-border: #cccccc;
        --placeholder-color: #666666;
        --card-bg: #f8f9fa; /* Светлый фон карточек */
        --link-color: #0066cc; /* Цвет ссылок на светлой теме */
    }

    /* ---------------- Глобальные стили ---------------- */
    body {
        margin: 0;
        font-family: Arial, sans-serif;
        background-color: var(--background-color);
        color: var(--text-color);
        transition: background-color 0.3s, color 0.3s;
    }

    a {
        text-decoration: none;
        color: var(--link-color);
        transition: color 0.3s;
    }

        a:hover {
            color: var(--text-color);
        }


    /* ---------------- Кнопки ---------------- */
    .btn {
        background-color: var(--button-color);
        color: var(--text-color);
        border: none;
        border-radius: 20px;
        padding: 8px 16px;
        transition: background-color 0.3s;
        cursor: pointer;
    }

        .btn:hover {
            background-color: var(--button-hover-color);
        }

    /* ---------------- Карточки ---------------- */
    .card {
        background-color: var(--card-bg);
        border: 1px solid var(--search-bar-border);
        border-radius: 8px;
        padding: 1rem;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s, border-color 0.3s;
    }

        .card:hover {
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
        }

    .card-title {
        color: var(--text-color);
        font-size: 1.25rem;
        font-weight: bold;
    }

    .card-body {
        color: var(--text-color);
        font-size: 1rem;
        line-height: 1.5;
    }

        .card-body p {
            color: var(--text-color);
        }

    /* ---------------- Интерактивные элементы ---------------- */
    .editor-toolbar {
        background-color: var(--navbar-color);
        border: 1px solid var(--search-bar-border);
        border-radius: 5px 5px 0 0;
        padding: 8px;
    }

    .mb-3 {
        color: var(--text-color);
        font-size: 1.25rem;
        font-weight: bold;
    }
    /* ---------------- Поля ввода ---------------- */
    .editor-textarea {
        background-color: var(--card-bg); /* Темный фон поля ввода */
        color: var(--text-color) !important; /* Принудительно устанавливаем цвет текста */
        border: 1px solid var(--search-bar-border); /* Граница */
        border-radius: 5px;
        padding: 12px;
        font-size: 1rem;
        transition: background-color 0.3s, color 0.3s;
    }

        .editor-textarea::placeholder {
            color: var(--placeholder-color); /* Цвет текста для плейсхолдера */
            opacity: 0.7; /* Полупрозрачный */
        }

        .editor-textarea:focus {
            border-color: var(--link-color); /* Цвет границы при фокусе */
            outline: none; /* Убрать стандартную обводку */
            background-color: var(--background-color); /* Более светлый фон для фокусированного состояния */
            color: var(--text-color) !important; /* Убедимся, что текст остаётся читаемым */
        }


    .rules-btn {
        font-size: 0.875rem;
        background-color: var(--button-color);
        color: var(--text-color);
        border: 1px solid var(--search-bar-border);
        border-radius: 5px;
        padding: 6px 12px;
        transition: background-color 0.3s, border-color 0.3s;
    }

        .rules-btn:hover {
            background-color: var(--button-hover-color);
            border-color: var(--button-hover-color);
        }

    /* ---------------- Дополнительные классы ---------------- */
    .text-muted {
        color: var(--placeholder-color) !important;
    }

    .text-dark {
        color: var(--text-color) !important;
    }

    /* ---------------- Контейнер для тегов ---------------- */
    #tags-container {
        background-color: var(--card-bg); /* Фон совпадает с карточками */
        color: var(--text-color); /* Цвет текста */
        border: 1px solid var(--search-bar-border); /* Граница */
        border-radius: 5px; /* Скругленные углы */
        padding: 8px;
        min-height: 48px; /* Обеспечиваем минимальную высоту */
        display: flex;
        align-items: center;
        gap: 8px;
        flex-wrap: wrap; /* Перенос строк для тегов */
        transition: background-color 0.3s, border-color 0.3s;
    }

    /* Интерактивное поле ввода в контейнере тегов */
    #tags-input {
        background-color: var(--card-bg); /* Совпадает с фоном контейнера */
        color: var(--text-color);
        border: none;
        outline: none; /* Убираем стандартные обводки */
        flex-grow: 1; /* Растягивается на оставшееся пространство */
        padding: 4px 0;
        min-width: 100px; /* Минимальная ширина */
    }

        #tags-input::placeholder {
            color: var(--placeholder-color); /* Цвет текста для плейсхолдера */
            opacity: 0.7;
        }

    /* Теги */
    .badge {
        background-color: var(--button-color); /* Цвет для тегов */
        color: var(--text-color); /* Цвет текста */
        border-radius: 20px; /* Скругленные углы */
        padding: 4px 12px;
        display: inline-flex;
        align-items: center;
        gap: 6px;
        transition: background-color 0.3s, color 0.3s;
    }

        /* Кнопка удаления тега */
        .badge .remove-tag {
            color: var(--placeholder-color); /* Цвет кнопки удаления */
            font-size: 1rem;
            cursor: pointer;
            transition: color 0.3s;
        }

            .badge .remove-tag:hover {
                color: var(--link-color); /* При наведении цвет ссылки */
            }

    .toolbar-btn {
        background-color: var(--button-color);
        color: var(--text-color);
        border: none;
        padding: 8px 12px;
        border-radius: 5px;
        font-size: 14px;
        cursor: pointer;
        transition: background-color 0.3s, color 0.3s;
    }

        .toolbar-btn:hover {
            background-color: var(--button-hover-color);
        }
</style>

<body>
    <div class="container mt-5">
        <div class="card p-4 shadow-sm">
            <h3 class="mb-3">
                Создание новой темы
                <a asp-controller="Home" asp-action="Rules" class="rules-btn float-end">ПРАВИЛА</a>
            </h3>
            <form asp-action="CreateTopic" asp-controller="Topic" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <!-- Заголовок -->
                <div class="mb-3">
                    <input name="title" type="text" class="editor-textarea form-control" placeholder="Заголовок" required>
                </div>

                <!-- Категории -->
                <div class="mb-3">
                    <label for="categories" class="form-label">Категории</label>
                    <div id="tags-container" class="form-control p-2 d-flex flex-wrap gap-1">
                        <!-- Теги добавляются сюда -->
                        <input id="tags-input" type="text" class="border-0 flex-grow-1" placeholder="Введите категорию и нажмите Enter">
                    </div>
                    <input type="hidden" name="categories" id="categories-hidden" />
                </div>

                <!-- Панель инструментов для редактирования -->
                <div class="editor-toolbar d-flex justify-content-start gap-2">
                    <button type="button" class="toolbar-btn" onclick="execCommand('bold')"><b>Ж</b></button>
                    <button type="button" class="toolbar-btn" onclick="execCommand('italic')"><i>К</i></button>
                    <button type="button" class="toolbar-btn" onclick="execCommand('underline')"><u>П</u></button>
                    <button type="button" class="toolbar-btn" onclick="execCommand('insertUnorderedList')">• Список</button>
                </div>

                <!-- Редактируемый контент -->
                <div name="content" id="editor" class="editor-textarea form-control mt-0" contenteditable="true" placeholder="Ваше сообщение"></div>

                <!-- Скрытое поле для хранения контента -->
                <input type="hidden" id="content" name="content" />

                <!-- Кнопка отправки -->
                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-primary">Создать тему</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Bootstrap Icons -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Поле для добавления тегов
        const tagsInput = document.getElementById("tags-input");
        const tagsContainer = document.getElementById("tags-container");
        const categoriesHidden = document.getElementById("categories-hidden");
        let tags = [];

        // Добавление нового тега
        tagsInput.addEventListener("keypress", (event) => {
            if (event.key === "Enter") {
                event.preventDefault();
                const tag = tagsInput.value.trim();
                if (tag && !tags.includes(tag)) {
                    tags.push(tag);

                    // Создаем элемент для нового тега
                    const tagElement = document.createElement("span");
                    tagElement.className = "badge bg-primary text-white d-flex align-items-center gap-2";
                    tagElement.innerHTML = `${tag} <i class="bi bi-x-circle remove-tag" style="cursor: pointer;"></i>`;
                    tagsContainer.insertBefore(tagElement, tagsInput);

                    // Обновляем скрытое поле
                    categoriesHidden.value = tags.join(",");

                    // Очистка поля ввода
                    tagsInput.value = "";

                    // Удаление тега
                    tagElement.querySelector(".remove-tag").addEventListener("click", () => {
                        tags = tags.filter((t) => t !== tag);
                        categoriesHidden.value = tags.join(",");
                        tagElement.remove();
                    });
                }
            }
        });
    </script>
</body>

