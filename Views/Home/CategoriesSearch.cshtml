@model List<Topic>

@{
    var selectedCategory = Context.Request.Query["category"].ToString();
    var filteredTopics = string.IsNullOrEmpty(selectedCategory) ? Model : Model.Where(t => t.Categories.Contains(selectedCategory)).ToList();
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
<style>

    /* Общие стили */
    :root {
        --link-color: #4d4d4d; /* Цвет ссылок на темной теме */
    }

    [data-theme="light"] {
        --link-color: #0066cc; /* Цвет ссылок на светлой теме */
    }

    /* Карточки и контент в зависимости от темы */
    .card {
        background-color: var(--card-bg);
        color: var(--text-color);
        border: 1px solid var(--search-bar-border);
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        transition: background-color 0.3s, border-color 0.3s, box-shadow 0.3s;
    }

        .card:hover {
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        }

    .card-title,
    .card-body {
        color: var(--text-color);
    }

        .card-body p {
            color: var(--text-color);
            font-size: 0.95rem;
        }

    .text-muted {
        color: var(--placeholder-color) !important; /* Слегка тусклый текст */
    }

    .nav-link {
        color: var(--text-color);
    }

        .nav-link:hover {
            color: var(--link-color);
        }


    .pagination .page-item.active .page-link {
        background-color: var(--link-color);
        border-color: var(--link-color);
    }


    .thumbnail {
        width: 80px;
        height: 80px;
        object-fit: cover;
    }

    .text-dark {
        color: var(--text-color) !important;
    }

    .text-muted {
        color: var(--placeholder-color) !important;
    }

    /* Улучшение внешнего вида ссылок */
    .card a {
        color: var(--text-color);
        text-decoration: none;
    }

        .card a:hover {
            color: var(--link-color);
        }

    .tags {
        padding: 2px;
        border-radius: 18px;
        color: var(--text-color);
        font-size: 10px;
        font-weight: 600;
        position: relative;
        cursor: pointer;
        transition: color 0.3s ease, transform 0.3s ease;
    }

    .no-topic {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 20px;
        margin-top: 40px;
        text-align: center;
        color: #555;
        animation: fadeIn 1s ease-out; /* Плавное появление */
    }

        .no-topic i {
            font-size: 50px;
            color: #007bff;
            animation: bounce 1.5s infinite; /* Подпрыгивающая иконка */
        }

        .no-topic p {
            font-size: 18px;
            font-weight: 600;
            margin-top: 10px;
            color: var(--text-color); /* Цвет текста */
        }

    .back-link {
        font-size: 16px;
        color: var(--text-color);
        text-decoration: none;
    }

   
    .highlight {
        color: var(--primary-color);
        font-weight: bold;
    }
 
</style>


<body>
    <div class="col-md-12 text-center position-relative py-3">
        <!-- Кнопка назад -->
        <a href="javascript:void(0);" class="back-link position-absolute start-0 ms-3 mt-2 d-flex align-items-center" onclick="window.location.href=document.referrer;">
            ← Назад
        </a>

        <!-- Заголовок -->
        <div class="d-flex justify-content-center align-items-center flex-column mb-3">
            <h1 id="page-title" class="h3 fw-bold animated-title">
                Результат по категории:
                <span class="highlight">
                    @(!string.IsNullOrEmpty(Context.Request.Query["category"]) ? Context.Request.Query["category"] : "Обсуждения")
                </span>
            </h1>
            <div class="underline"></div>
        </div>
    </div>



    <!-- Основная часть контента справа -->
    <div class="col-md-12">
        <div class="row">
            @if (filteredTopics.Any())
            {
                @foreach (var topic in filteredTopics)
                {
                    <div class="col-12 mb-3">
                        <div class="d-flex border rounded p-3">
                            <!-- Блок изображения -->
                            <div class="me-3 position-relative">
                                <img src="@topic.ImageUrl" alt="Thumbnail" class="rounded thumbnail" style="width: 80px; height: 80px; object-fit: cover;" data-fullsize="@topic.ImageUrl">
                            </div>

                            <!-- Основной контент -->
                            <a href="@Url.Action("Details", "Details", new { id = topic.Id })" class="flex-grow-1 text-dark text-decoration-none">
                                <div>
                                    <!-- Автор и теги -->
                                    <div class="mb-2 d-flex align-items-center">
                                        <span style="font-size: 12px; color:#007BFF; margin-right: 10px;">Автор: @topic.Author</span>
                                        @if (!string.IsNullOrEmpty(topic.Tags))
                                        {
                                            var tag = topic.Tags.Split(',');
                                            var displayedTags = tag.Take(3);
                                            var remainingCount = tag.Length - displayedTags.Count();

                                            foreach (var category in displayedTags)
                                            {
                                                <span class="tags me-1">@category.Trim()</span>
                                            }

                                            if (remainingCount > 0)
                                            {
                                                <span class="tags">+ @remainingCount</span>
                                            }
                                        }
                                    </div>

                                    <!-- Заголовок -->
                                    <h5 class="mb-1 fw-bold">
                                        @topic.Title.Substring(0, Math.Min(100, topic.Title.Length))
                                    </h5>

                                    <!-- Содержимое -->
                                    <p class="mb-2 text-muted" style="line-height: 1.5;">
                                        @topic.Content.Substring(0, Math.Min(200, topic.Content.Length))...
                                    </p>

                                    <!-- Категории -->
                                    <div class="mb-2">
                                        @if (!string.IsNullOrEmpty(topic.Categories))
                                        {
                                            var categories = topic.Categories.Split(',');
                                            var displayedCategories = categories.Take(3);
                                            var remainingCount = categories.Length - displayedCategories.Count();

                                            foreach (var category in displayedCategories)
                                            {
                                                <span style="font-size: 12px" class="badge bg-primary me-1">@category.Trim()</span>
                                            }

                                            if (remainingCount > 0)
                                            {
                                                <span class="badge bg-secondary">+ @remainingCount</span>
                                            }
                                        }
                                    </div>

                                    <!-- Метрики и дата -->
                                    <div class="d-flex justify-content-between align-items-center text-muted">
                                        <span>
                                            <i class="bi bi-heart me-1"></i>@topic.LikesCount
                                            <i class="bi bi-chat me-1 ms-3"></i>@topic.CommentsCount
                                        </span>
                                        <small>Опубликовано @topic.CreatedAt.ToString("HH:mm dd MMM yyyy")</small>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="no-topic">
                    <i class="bi bi-window-dock"></i>
                    <p style="color: var(--text-color);">Тем для обсуждения пока нет. Будьте первым, кто создаст тему!</p>
                </div>
            }



            @if (ViewBag.TotalPages > 1)
            {
                <div class="d-flex justify-content-center mt-4">
                    <nav aria-label="Page navigation">
                        <ul class="pagination">
                            @for (int i = 1; i <= ViewBag.TotalPages; i++)
                            {
                                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("CategoriesSearch", "Home", new { category = ViewBag.SelectedCategory, pageNumber = i })" data-page="@i" data-category="@ViewBag.SelectedCategory">
                                        @i
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
        </div>
    </div>

</body>
