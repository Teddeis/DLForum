@using Profile
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@model List<notification>

@{
    int? currentUserId = HttpContextAccessor.HttpContext?.Session.GetInt32("ID");
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
<link rel="stylesheet" href="/css/profile_style.css">

<div class="notification-page">
    <main class="notification-content">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1 class="h3">Уведомления</h1>
        </div>

        <!-- Вкладки для переключения типов уведомлений -->
        <nav class="tabs">
            <button class="tab active" id="allTab">Все</button>
            <button class="tab" id="systemTab">Системное</button>
            <button class="tab" id="replyTab">Ответы</button>

            <!-- Переключатель для Прочитанных и Непрочитанных уведомлений -->
            <div class="read-unread-toggle">
                <label class="containerss">
                    <input type="checkbox" id="readUnreadToggle">
                    <span class="checkmark"></span>
                </label>
                <span id="readUnreadLabel" class="align-content-center">Только непрочитанные</span>
            </div>
        </nav>


        <!-- Секция уведомлений -->
        <section class="notification-list">
            @if (currentUserId == null)
            {
                <p>Ошибка: Не удалось определить пользователя.</p>
            }
            else
            {
                <!-- Все уведомления -->
                <div id="allNotifications" class="notification-section">
                    @foreach (var notification in Model?.Where(n => n.id_users == currentUserId) ?? Enumerable.Empty<notification>())
                    {
                        <div class="notification-item @(notification.read ? "read" : "unread")" style="display: @(notification.read ? "none" : "block")">
                            <div class="notif-row">
                                <span class="notif-main">
                                    <strong>@notification.from_to</strong>
                                    @if (notification.type == "Ответы")
                                    {
                                        <span>ответил(а) на ваш комментарий:</span>
                                        <a href="/Details/@notification.message" class="notification-link" style="text-decoration: none; color: var(--primary-color)">
                                            Перейти к ответу
                                        </a>
                                    }
                                    else
                                    {
                                        <span>отправил(а) сообщение:</span>
                                        <span>"@notification.message"</span>
                                    }
                                </span>
                                <span class="notif-date">
                                    @notification.created_at.ToString("dd.MM.yyyy HH:mm")
                                </span>
                            </div>
                            <hr />
                            @if (!notification.read)
                            {
                                <form action="@Url.Action("MarkAsRead", new { notificationId = notification.id })" method="post">
                                    <button type="submit" class="btn-mark-as-read">
                                        <i class="fas fa-check-circle"></i>
                                    </button>
                                </form>
                            }
                        </div>
                    }
                </div>

                <!-- Системные уведомления -->
                <div id="systemNotifications" class="notification-section" style="display:none;">
                    @foreach (var notification in Model?.Where(n => n.id_users == currentUserId && n.type == "Системное") ?? Enumerable.Empty<notification>())
                    {
                        <div class="notification-item @(notification.read ? "read" : "unread")" style="display: @(notification.read ? "none" : "block")">
                            <div class="notif-row">
                                <span class="notif-main">
                                    <strong>@notification.from_to</strong> отправил(а) сообщение:
                                    <span>"@notification.message"</span>
                                </span>
                                <span class="notif-date">
                                    @notification.created_at.ToString("dd.MM.yyyy HH:mm")
                                </span>
                            </div>
                            <hr />
                            @if (!notification.read)
                            {
                                <form action="@Url.Action("MarkAsRead", new { notificationId = notification.id })" method="post">
                                    <button type="submit" class="btn-mark-as-read">
                                        <i class="fas fa-check-circle"></i>
                                    </button>
                                </form>
                            }
                        </div>
                    }
                </div>

                <!-- Ответы -->
                <div id="replyNotifications" class="notification-section" style="display:none;">
                    @foreach (var notification in Model?.Where(n => n.id_users == currentUserId && n.type == "Ответы") ?? Enumerable.Empty<notification>())
                    {
                        <div class="notification-item @(notification.read ? "read" : "unread")" style="display: @(notification.read ? "none" : "block")">
                            <div class="notif-row">
                                <span class="notif-main">
                                    <strong>@notification.from_to</strong> ответил(а) на ваш комментарий:
                                    <a href="/Details/@notification.message" class="notification-link" style="text-decoration: none; color: var(--primary-color)">
                                        Перейти к ответу
                                    </a>
                                </span>
                                <span class="notif-date">
                                    @notification.created_at.ToString("dd.MM.yyyy HH:mm")
                                </span>
                            </div>
                            <hr />
                            @if (!notification.read)
                            {
                                <form action="@Url.Action("MarkAsRead", new { notificationId = notification.id })" method="post">
                                    <button type="submit" class="btn-mark-as-read">
                                        <i class="fas fa-check-circle"></i>
                                    </button>
                                </form>
                            }
                        </div>
                    }
                </div>

                @if (!(Model?.Any(n => n.id_users == currentUserId) ?? false))
                {
                    <p>Нет уведомлений</p>
                }
            }
        </section>
    </main>
</div>
 
 <script>
    // Переключение между вкладками типов уведомлений
    document.getElementById('allTab').addEventListener('click', function() {
        document.getElementById('allNotifications').style.display = 'block';
        document.getElementById('systemNotifications').style.display = 'none';
        document.getElementById('replyNotifications').style.display = 'none';
        document.getElementById('allTab').classList.add('active');
        document.getElementById('systemTab').classList.remove('active');
        document.getElementById('replyTab').classList.remove('active');
    });

    document.getElementById('systemTab').addEventListener('click', function() {
        document.getElementById('systemNotifications').style.display = 'block';
        document.getElementById('replyNotifications').style.display = 'none';
        document.getElementById('allNotifications').style.display = 'none';
        document.getElementById('systemTab').classList.add('active');
        document.getElementById('replyTab').classList.remove('active');
        document.getElementById('allTab').classList.remove('active');
    });

    document.getElementById('replyTab').addEventListener('click', function() {
        document.getElementById('replyNotifications').style.display = 'block';
        document.getElementById('systemNotifications').style.display = 'none';
        document.getElementById('allNotifications').style.display = 'none';
        document.getElementById('replyTab').classList.add('active');
        document.getElementById('systemTab').classList.remove('active');
        document.getElementById('allTab').classList.remove('active');
    });

    // Переключение между прочитанными и непрочитанными уведомлениями
    document.getElementById('readUnreadToggle').addEventListener('change', function() {
        let isChecked = this.checked;
        document.querySelectorAll('.notification-item').forEach(function(item) {
            if (isChecked) {
                // Показать только непрочитанные
                if (item.classList.contains('unread')) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            } else {
                // Показать все
                item.style.display = 'block';
            }
        });

        // Обновить метку на кнопке
        let label = document.getElementById('readUnreadLabel');
        if (isChecked) {
            label.innerHTML = 'Все уведомления';
        } else {
            label.innerHTML = 'Только непрочитанные';
        }
    });

    // Изначально показываем только непрочитанные уведомления
    document.getElementById('readUnreadToggle').checked = true;
    document.getElementById('readUnreadLabel').innerHTML = 'Все уведомления';
 </script>