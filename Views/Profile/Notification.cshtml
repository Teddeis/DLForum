@using Profile
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor
@model List<notification>

@{
    int? currentUserId = HttpContextAccessor.HttpContext?.Session.GetInt32("ID");

    // Отладка: вывести текущий ID пользователя
    Console.WriteLine($"Current User ID: {currentUserId}");
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
<link rel="stylesheet" href="/css/profile_style.css">

<div class="notification-page">
    <main class="notification-content">
        <nav class="tabs">
            <button class="tab active">Все <span>@(Model?.Count ?? 0)</span></button>
        </nav>

        <section class="notification-list">
            @if (currentUserId == null)
            {
                <p>Ошибка: Не удалось определить пользователя.</p>
            }
            else
            {
                var unreadNotifications = Model?.Where(n => n.id_users == currentUserId && !n.read).ToList();
                var readNotifications = Model?.Where(n => n.id_users == currentUserId && n.read).ToList();

                // Выводим непрочитанные уведомления
                if (unreadNotifications != null && unreadNotifications.Any())
                {
                    <h3>Непрочитанные уведомления</h3>
                    @foreach (var notification in unreadNotifications)
                    {
                        <div class="notification-item unread">
                            <div>
                                <p>
                                    <strong>@notification.from_to</strong> отправил(а) сообщение:
                                    <span>"@notification.message"</span>
                                </p>
                                <time>@notification.created_at.ToString("dd.MM.yyyy HH:mm")</time>
                            </div>
                            <form action="@Url.Action("MarkAsRead", new { notificationId = notification.id })" method="post">
                                <button type="submit" class="btn-mark-as-read">
                                    <i class="fas fa-check-circle"></i>
                                </button>
                            </form>
                        </div>
                    }
                }

                // Выводим прочитанные уведомления
                if (readNotifications != null && readNotifications.Any())
                {
                    <h3>Прочитанные уведомления</h3>
                    @foreach (var notification in readNotifications)
                    {
                        <div class="notification-item read">
                            <div>
                                <p>
                                    <strong>@notification.from_to</strong> отправил(а) сообщение:
                                    <span>"@notification.message"</span>
                                </p>
                                <time>@notification.created_at.ToString("dd.MM.yyyy HH:mm")</time>
                            </div>
                        </div>
                    }
                }

                // Если нет уведомлений
                if (!unreadNotifications.Any() && !readNotifications.Any())
                {
                    <p>Нет уведомлений</p>
                }
            }
        </section>
    </main>
</div>
